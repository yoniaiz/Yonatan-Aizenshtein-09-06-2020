{"version":3,"sources":["../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/bytesToUuid.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/v4.js","../../src/constant.js","../../src/decorators/staticMethods.js","../../src/decorators/customEvent.js","../../src/decorators/bodyMode.js","../../src/utils/getPosition.js","../../src/utils/getTipContent.js","../../src/utils/aria.js","../../src/utils/nodeListToArray.js","../../src/decorators/defaultStyles.js","../../src/decorators/styler.js","../../src/decorators/trackRemoval.js","../../src/index.js","../../src/decorators/windowListener.js","../../src/decorators/isCapture.js","../../src/decorators/getEffect.js","../../src/utils/uuid.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","i","toString","substr","bytesToUuid","buf","offset","bth","join","v4","options","Array","rnds","random","ii","HIDE","REBUILD","SHOW","dispatchGlobalEvent","eventName","opts","window","event","detail","document","checkStatus","show","this","id","isCapture","e","currentItem","hideTooltip","setUntargetItems","getTargetArray","targetArray","currentTarget","customListeners","set","target","map","Object","configurable","value","get","bodyListener","respectEffect","customEvent","tip","forId","isCustomEvent","isTargetBelongsToTooltip","getEffect","proxy","makeProxy","callback","findCustomEvents","dataAttribute","events","getBody","getDimensions","tipWidth","tipHeight","targetWidth","targetHeight","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","calculateOffset","extraOffsetX","extraOffsetY","windowWidth","windowHeight","getParent","parentTop","parentLeft","getTipOffsetLeft","place","offsetX","getTipOffsetTop","offsetY","outsideRight","p","getTipOffsetRight","outsideBottom","getTipOffsetBottom","outside","outsideLeft","outsideTop","inside","placesList","insideList","isNewState","shouldUpdatePlace","desiredPlace","newPlace","newState","position","left","parseInt","top","node","height","width","effect","boundingClientRect","targetTop","targetLeft","clientY","l","r","t","b","bottom","disToMouse","right","JSON","key","currentParent","children","getContent","regexp","multiline","className","parseAria","props","ariaObj","prop","test","length","nodeList","fill","index","defaultColors","generateTooltipStyle","uuid","customColors","type","hasBorder","colors","textColor","backgroundColor","borderColor","arrowColor","generateStyle","getDefaultPopupColors","getPopupColors","ReactTooltip","CONSTANT","hasTarget","staticMethods","windowListener","ele","eventOff","dataEvent","dataEventOff","customListener","dataEffect","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","listeners","bodyModeListeners","targetEventOff","bodyMode","trackRemoval","border","extraClass","html","delayHide","delayShow","currentEvent","ariaProps","isEmptyTip","disable","originTooltip","isMultiline","PropTypes","insecure","class","delayUpdate","globalEventOff","afterShow","afterHide","overridePosition","scrollHide","resizeHide","wrapper","clickable","bool","methodArray","method","state","tooltipRef","matches","escaped","selector","nodeListToArray","element","isCaptureMode","content","getTipContent","placeholder","isGlobalCall","switchToSolid","result","getPosition","reshowDelay","self","updateState","text","background","arrow","setInterval","setTimeout","delayTime","eventTarget","isInvisible","clearTimeout","isScroll","isMyElement","resetState","isVisible","setState","clearInterval","Boolean","color","style","tooltipClass","hasCustomColors","Wrapper","wrapperClassName","filter","htmlContent","ref","data-id","dangerouslySetInnerHTML","__html","nextProps","prevState","newAriaProps","React","Component","MutationObserver","observer","mutations","m1","mutation","m2","childList","subtree","_objectDestructuringEmpty","obj","TypeError"],"mappings":"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","file":"static/js/0.dc0e8c6e.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","export default {\n  GLOBAL: {\n    HIDE: \"__react_tooltip_hide_event\",\n    REBUILD: \"__react_tooltip_rebuild_event\",\n    SHOW: \"__react_tooltip_show_event\"\n  }\n};\n","/**\n * Static methods for react-tooltip\n */\nimport CONSTANT from \"../constant\";\n\nconst dispatchGlobalEvent = (eventName, opts) => {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  let event;\n\n  if (typeof window.CustomEvent === \"function\") {\n    event = new window.CustomEvent(eventName, { detail: opts });\n  } else {\n    event = document.createEvent(\"Event\");\n    event.initEvent(eventName, false, true, opts);\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport default function(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, { target });\n  };\n\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n  target.rebuild = () => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n  target.show = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, { target });\n  };\n\n  target.prototype.globalRebuild = function() {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n      this.showTooltip({ currentTarget: hasTarget && event.detail.target }, true);\n    }\n  };\n\n  target.prototype.globalHide = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      this.hideTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        hasTarget\n      );\n    }\n  };\n}\n","/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\nexport const checkStatus = function(dataEventOff, e) {\n  const { show } = this.state;\n  const { id } = this.props;\n  const isCapture = this.isCapture(e.currentTarget);\n  const currentItem = e.currentTarget.getAttribute(\"currentItem\");\n\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === \"true\") {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute(\"currentItem\", \"true\");\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nconst setUntargetItems = function(currentTarget, targetArray) {\n  for (let i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute(\"currentItem\", \"false\");\n    } else {\n      targetArray[i].setAttribute(\"currentItem\", \"true\");\n    }\n  }\n};\n\nconst customListeners = {\n  id: \"9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf\",\n  set(target, event, listener) {\n    if (this.id in target) {\n      const map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: { [event]: listener }\n      });\n    }\n  },\n  get(target, event) {\n    const map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\n\nexport default function(target) {\n  target.prototype.isCustomEvent = function(ele) {\n    const { event } = this.state;\n    return event || !!ele.getAttribute(\"data-event\");\n  };\n\n  /* Bind listener for custom event */\n  target.prototype.customBindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = ele.getAttribute(\"data-event\") || event;\n    const dataEventOff = ele.getAttribute(\"data-event-off\") || eventOff;\n\n    dataEvent.split(\" \").forEach(event => {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      const customListener = checkStatus.bind(this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(\" \").forEach(event => {\n        ele.removeEventListener(event, this.hideTooltip);\n        ele.addEventListener(event, this.hideTooltip, false);\n      });\n    }\n  };\n\n  /* Unbind listener for custom event */\n  target.prototype.customUnbindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = event || ele.getAttribute(\"data-event\");\n    const dataEventOff = eventOff || ele.getAttribute(\"data-event-off\");\n\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n","/**\n * Util method to get effect\n */\nimport { checkStatus } from \"./customEvent\";\n\nconst makeProxy = e => {\n  const proxy = {};\n  for (const key in e) {\n    if (typeof e[key] === \"function\") {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\n\nconst bodyListener = function(callback, options, e) {\n  const { respectEffect = false, customEvent = false } = options;\n  const { id } = this.props;\n\n  const tip = e.target.getAttribute(\"data-tip\") || null;\n  const forId = e.target.getAttribute(\"data-for\") || null;\n\n  const target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  const isTargetBelongsToTooltip =\n    (id == null && forId == null) || forId === id;\n\n  if (\n    tip != null &&\n    (!respectEffect || this.getEffect(target) === \"float\") &&\n    isTargetBelongsToTooltip\n  ) {\n    const proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nconst findCustomEvents = (targetArray, dataAttribute) => {\n  const events = {};\n  targetArray.forEach(target => {\n    const event = target.getAttribute(dataAttribute);\n    if (event) event.split(\" \").forEach(event => (events[event] = true));\n  });\n\n  return events;\n};\n\nconst getBody = () => document.getElementsByTagName(\"body\")[0];\n\nexport default function(target) {\n  target.prototype.isBodyMode = function() {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function(targetArray) {\n    const {\n      event,\n      eventOff,\n      possibleCustomEvents,\n      possibleCustomEventsOff\n    } = this.state;\n    const body = getBody();\n\n    const customEvents = findCustomEvents(targetArray, \"data-event\");\n    const customEventsOff = findCustomEvents(targetArray, \"data-event-off\");\n\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents\n      .split(\" \")\n      .forEach(event => (customEvents[event] = true));\n    possibleCustomEventsOff\n      .split(\" \")\n      .forEach(event => (customEventsOff[event] = true));\n\n    this.unbindBodyListener(body);\n\n    const listeners = (this.bodyModeListeners = {});\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (const event in customEvents) {\n      listeners[event] = bodyListener.bind(\n        this,\n        e => {\n          const targetEventOff =\n            e.currentTarget.getAttribute(\"data-event-off\") || eventOff;\n          checkStatus.call(this, targetEventOff, e);\n        },\n        { customEvent: true }\n      );\n    }\n    for (const event in customEventsOff) {\n      listeners[event] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n    for (const event in listeners) {\n      body.addEventListener(event, listeners[event]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function(body) {\n    body = body || getBody();\n\n    const listeners = this.bodyModeListeners;\n    for (const event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n","/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nexport default function(e, target, node, place, desiredPlace, effect, offset) {\n  const { width: tipWidth, height: tipHeight } = getDimensions(node);\n\n  const { width: targetWidth, height: targetHeight } = getDimensions(target);\n\n  const { mouseX, mouseY } = getCurrentOffset(e, target, effect);\n  const defaultOffset = getDefaultPosition(\n    effect,\n    targetWidth,\n    targetHeight,\n    tipWidth,\n    tipHeight\n  );\n  const { extraOffsetX, extraOffsetY } = calculateOffset(offset);\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const { parentTop, parentLeft } = getParent(node);\n\n  // Get the edge offset of the tooltip\n  const getTipOffsetLeft = place => {\n    const offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetRight = place => {\n    const offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetTop = place => {\n    const offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n  const getTipOffsetBottom = place => {\n    const offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  };\n\n  //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n  const outsideLeft = p => getTipOffsetLeft(p) < 0;\n  const outsideRight = p => getTipOffsetRight(p) > windowWidth;\n  const outsideTop = p => getTipOffsetTop(p) < 0;\n  const outsideBottom = p => getTipOffsetBottom(p) > windowHeight;\n\n  // Check whether the tooltip with orientation p is completely inside the client window\n  const outside = p =>\n    outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  const inside = p => !outside(p);\n\n  const placesList = [\"top\", \"bottom\", \"left\", \"right\"];\n  const insideList = [];\n  for (let i = 0; i < 4; i++) {\n    const p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  let isNewState = false;\n  let newPlace;\n  const shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (\n    insideList.length > 0 &&\n    outside(desiredPlace) &&\n    outside(place)\n  ) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: { place: newPlace }\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\n\nconst getDimensions = node => {\n  const { height, width } = node.getBoundingClientRect();\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n};\n\n// Get current mouse offset\nconst getCurrentOffset = (e, currentTarget, effect) => {\n  const boundingClientRect = currentTarget.getBoundingClientRect();\n  const targetTop = boundingClientRect.top;\n  const targetLeft = boundingClientRect.left;\n  const { width: targetWidth, height: targetHeight } = getDimensions(\n    currentTarget\n  );\n\n  if (effect === \"float\") {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n};\n\n// List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\nconst getDefaultPosition = (\n  effect,\n  targetWidth,\n  targetHeight,\n  tipWidth,\n  tipHeight\n) => {\n  let top;\n  let right;\n  let bottom;\n  let left;\n  const disToMouse = 3;\n  const triangleHeight = 2;\n  const cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === \"float\") {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === \"solid\") {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n\n  return { top, bottom, left, right };\n};\n\n// Consider additional offset into position calculation\nconst calculateOffset = offset => {\n  let extraOffsetX = 0;\n  let extraOffsetY = 0;\n\n  if (Object.prototype.toString.apply(offset) === \"[object String]\") {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n  for (const key in offset) {\n    if (key === \"top\") {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === \"bottom\") {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === \"left\") {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === \"right\") {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n\n  return { extraOffsetX, extraOffsetY };\n};\n\n// Get the offset of the parent elements\nconst getParent = currentTarget => {\n  let currentParent = currentTarget;\n  while (currentParent) {\n    if (\n      window.getComputedStyle(currentParent).getPropertyValue(\"transform\") !==\n      \"none\"\n    )\n      break;\n    currentParent = currentParent.parentElement;\n  }\n\n  const parentTop =\n    (currentParent && currentParent.getBoundingClientRect().top) || 0;\n  const parentLeft =\n    (currentParent && currentParent.getBoundingClientRect().left) || 0;\n\n  return { parentTop, parentLeft };\n};\n","/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nimport React from \"react\";\n\nexport default function(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  const regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === \"false\" || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  }\n\n  // Multiline tooltip content\n  return tip.split(regexp).map((d, i) => {\n    return (\n      <span key={i} className=\"multi-line\">\n        {d}\n      </span>\n    );\n  });\n}\n","/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nexport function parseAria(props) {\n  const ariaObj = {};\n  Object.keys(props)\n    .filter(prop => {\n      // aria-xxx and role is acceptable\n      return /(^aria-\\w+$|^role$)/.test(prop);\n    })\n    .forEach(prop => {\n      ariaObj[prop] = props[prop];\n    });\n\n  return ariaObj;\n}\n","/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\nexport default function(nodeList) {\n  const length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(index => nodeList[index]);\n}\n","/**\n * Default pop-up style values (text color, background color).\n */\nconst defaultColors = {\n  \"dark\": { \"text\": \"#fff\", \"background\": \"#222\", \"border\": \"transparent\", \"arrow\": \"#222\" },\n  \"success\": { \"text\": \"#fff\", \"background\": \"#8DC572\", \"border\": \"transparent\", \"arrow\": \"#8DC572\" },\n  \"warning\": { \"text\": \"#fff\", \"background\": \"#F0AD4E\", \"border\": \"transparent\", \"arrow\": \"#F0AD4E\" },\n  \"error\": { \"text\": \"#fff\", \"background\": \"#BE6464\", \"border\": \"transparent\", \"arrow\": \"#BE6464\" },\n  \"info\": { \"text\": \"#fff\", \"background\": \"#337AB7\", \"border\": \"transparent\", \"arrow\": \"#337AB7\" },\n  \"light\": { \"text\": \"#222\", \"background\": \"#fff\", \"border\": \"transparent\", \"arrow\": \"#fff\" }\n};\n\nexport function getDefaultPopupColors (type) {\n\treturn defaultColors[type] ? { ...defaultColors[type] } : undefined;\n}\n","import { getDefaultPopupColors } from \"./defaultStyles\";\n\n/**\n* Generates the specific tooltip style for use on render.\n*/\nexport function generateTooltipStyle(uuid, customColors, type, hasBorder) {\n\treturn generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\nfunction generateStyle(uuid, colors) {\n  const textColor = colors.text;\n  const backgroundColor = colors.background;\n  const borderColor = colors.border;\n  const arrowColor = colors.arrow;\n\n  return `\n  \t.${uuid} {\n\t    color: ${textColor};\n\t    background: ${backgroundColor};\n\t    border: 1px solid ${borderColor};\n  \t}\n\n  \t.${uuid}.place-top {\n        margin-top: -10px;\n    }\n    .${uuid}.place-top::before {\n        border-top: 8px solid ${borderColor};\n    }\n    .${uuid}.place-top::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        bottom: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-top-color: ${arrowColor};\n        border-top-style: solid;\n        border-top-width: 6px;\n    }\n\n    .${uuid}.place-bottom {\n        margin-top: 10px;\n    }\n    .${uuid}.place-bottom::before {\n        border-bottom: 8px solid ${borderColor};\n    }\n    .${uuid}.place-bottom::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        top: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-bottom-color: ${arrowColor};\n        border-bottom-style: solid;\n        border-bottom-width: 6px;\n    }\n\n    .${uuid}.place-left {\n        margin-left: -10px;\n    }\n    .${uuid}.place-left::before {\n        border-left: 8px solid ${borderColor};\n    }\n    .${uuid}.place-left::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        right: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-left-color: ${arrowColor};\n        border-left-style: solid;\n        border-left-width: 6px;\n    }\n\n    .${uuid}.place-right {\n        margin-left: 10px;\n    }\n    .${uuid}.place-right::before {\n        border-right: 8px solid ${borderColor};\n    }\n    .${uuid}.place-right::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        left: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-right-color: ${arrowColor};\n        border-right-style: solid;\n        border-right-width: 6px;\n    }\n  `;\n}\n\nfunction getPopupColors(customColors, type, hasBorder) {\n  const textColor = customColors.text;\n  const backgroundColor = customColors.background;\n  const borderColor = customColors.border;\n  const arrowColor = customColors.arrow ? customColors.arrow : customColors.background;\n\n  const colors = getDefaultPopupColors(type);\n\n  if (textColor) {\n    colors.text = textColor;\n  }\n\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = (type === \"light\" ? \"black\" : \"white\");\n    }\n  }\n\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n\n  return colors;\n}\n","/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nconst getMutationObserverClass = () => {\n  return (\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver\n  );\n};\n\nexport default function(target) {\n  target.prototype.bindRemovalTracker = function() {\n    const MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n\n    const observer = new MutationObserver(mutations => {\n      for (let m1 = 0; m1 < mutations.length; m1++) {\n        const mutation = mutations[m1];\n        for (let m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          const element = mutation.removedNodes[m2];\n          if (element === this.state.currentTarget) {\n            this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(window.document, { childList: true, subtree: true });\n\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function() {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n","/* eslint-disable no-unused-vars, dot-notation */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* Decorators */\nimport staticMethods from \"./decorators/staticMethods\";\nimport windowListener from \"./decorators/windowListener\";\nimport customEvent from \"./decorators/customEvent\";\nimport isCapture from \"./decorators/isCapture\";\nimport getEffect from \"./decorators/getEffect\";\nimport bodyMode from \"./decorators/bodyMode\";\nimport trackRemoval from \"./decorators/trackRemoval\";\n\n/* Utils */\nimport getPosition from \"./utils/getPosition\";\nimport getTipContent from \"./utils/getTipContent\";\nimport { parseAria } from \"./utils/aria\";\nimport nodeListToArray from \"./utils/nodeListToArray\";\nimport { generateUUID } from \"./utils/uuid\";\n\n/* CSS */\nimport \"./index.scss\";\nimport { generateTooltipStyle } from \"./decorators/styler\";\n\n@staticMethods\n@windowListener\n@customEvent\n@isCapture\n@getEffect\n@bodyMode\n@trackRemoval\nclass ReactTooltip extends React.Component {\n  static get propTypes() {\n    return {\n      uuid: PropTypes.string,\n      children: PropTypes.any,\n      place: PropTypes.string,\n      type: PropTypes.string,\n      effect: PropTypes.string,\n      offset: PropTypes.object,\n      multiline: PropTypes.bool,\n      border: PropTypes.bool,\n      textColor: PropTypes.string,\n      backgroundColor: PropTypes.string,\n      borderColor: PropTypes.string,\n      arrowColor: PropTypes.string,\n      insecure: PropTypes.bool,\n      class: PropTypes.string,\n      className: PropTypes.string,\n      id: PropTypes.string,\n      html: PropTypes.bool,\n      delayHide: PropTypes.number,\n      delayUpdate: PropTypes.number,\n      delayShow: PropTypes.number,\n      event: PropTypes.string,\n      eventOff: PropTypes.string,\n      isCapture: PropTypes.bool,\n      globalEventOff: PropTypes.string,\n      getContent: PropTypes.any,\n      afterShow: PropTypes.func,\n      afterHide: PropTypes.func,\n      overridePosition: PropTypes.func,\n      disable: PropTypes.bool,\n      scrollHide: PropTypes.bool,\n      resizeHide: PropTypes.bool,\n      wrapper: PropTypes.string,\n      bodyMode: PropTypes.bool,\n      possibleCustomEvents: PropTypes.string,\n      possibleCustomEventsOff: PropTypes.string,\n      clickable: PropTypes.bool\n    };\n  }\n\n  static defaultProps = {\n    insecure: true,\n    resizeHide: true,\n    wrapper: \"div\",\n    clickable: false\n  };\n\n  static supportedWrappers = [\"div\", \"span\"];\n\n  static displayName = \"ReactTooltip\";\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || \"top\", // Direction of tooltip\n      desiredPlace: props.place || \"top\",\n      type: \"dark\", // Color theme of tooltip\n      effect: \"float\", // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: \"\",\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null, // Current mouse event\n      currentTarget: null, // Current target of mouse event\n      ariaProps: parseAria(props), // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || \"\",\n      possibleCustomEventsOff: props.possibleCustomEventsOff || \"\",\n      originTooltip: null,\n      isMultiline: false\n    };\n\n    this.bind([\n      \"showTooltip\",\n      \"updateTooltip\",\n      \"hideTooltip\",\n      \"hideTooltipOnScroll\",\n      \"getTooltipContent\",\n      \"globalRebuild\",\n      \"globalShow\",\n      \"globalHide\",\n      \"onWindowResize\",\n      \"mouseOnToolTip\"\n    ]);\n\n    this.mount = true;\n    this.delayShowLoop = null;\n    this.delayHideLoop = null;\n    this.delayReshow = null;\n    this.intervalUpdateContent = null;\n  }\n\n  /**\n   * For unify the bind and unbind listener\n   */\n  bind(methodArray) {\n    methodArray.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { insecure, resizeHide } = this.props;\n\n    this.bindListener(); // Bind listener for tooltip\n    this.bindWindowEvents(resizeHide); // Bind global event for static method\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ariaProps } = prevState;\n    const newAriaProps = parseAria(nextProps);\n    const isChanged = Object.keys(newAriaProps).some(props => {\n      return newAriaProps[props] !== ariaProps[props];\n    });\n    if (!isChanged) {\n      return null;\n    }\n    return {\n      ...prevState,\n      ariaProps: newAriaProps\n    };\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n\n    this.clearTimer();\n\n    this.unbindListener();\n    this.removeScrollListener(this.state.currentTarget);\n    this.unbindWindowEvents();\n  }\n\n  /**\n   * Return if the mouse is on the tooltip.\n   * @returns {boolean} true - mouse is on the tooltip\n   */\n  mouseOnToolTip() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      /* old IE or Firefox work around */\n      if (!this.tooltipRef.matches) {\n        /* old IE work around */\n        if (this.tooltipRef.msMatchesSelector) {\n          this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n        } else {\n          /* old Firefox work around */\n          this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n        }\n      }\n      return this.tooltipRef.matches(\":hover\");\n    }\n    return false;\n  }\n\n  /**\n   * Pick out corresponded target elements\n   */\n  getTargetArray(id) {\n    let targetArray = [];\n    let selector;\n    if (!id) {\n      selector = \"[data-tip]:not([data-for])\";\n    } else {\n      const escaped = id.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\n      selector = `[data-tip][data-for=\"${escaped}\"]`;\n    }\n\n    // Scan document for shadow DOM elements\n    nodeListToArray(document.getElementsByTagName(\"*\"))\n      .filter(element => element.shadowRoot)\n      .forEach(element => {\n        targetArray = targetArray.concat(\n          nodeListToArray(element.shadowRoot.querySelectorAll(selector))\n        );\n      });\n    return targetArray.concat(\n      nodeListToArray(document.querySelectorAll(selector))\n    );\n  }\n\n  /**\n   * Bind listener to the target elements\n   * These listeners used to trigger showing or hiding the tooltip\n   */\n  bindListener() {\n    const { id, globalEventOff, isCapture } = this.props;\n    const targetArray = this.getTargetArray(id);\n\n    targetArray.forEach(target => {\n      if (target.getAttribute(\"currentItem\") === null) {\n        target.setAttribute(\"currentItem\", \"false\");\n      }\n      this.unbindBasicListener(target);\n      if (this.isCustomEvent(target)) {\n        this.customUnbindListener(target);\n      }\n    });\n\n    if (this.isBodyMode()) {\n      this.bindBodyListener(targetArray);\n    } else {\n      targetArray.forEach(target => {\n        const isCaptureMode = this.isCapture(target);\n        const effect = this.getEffect(target);\n        if (this.isCustomEvent(target)) {\n          this.customBindListener(target);\n          return;\n        }\n\n        target.addEventListener(\"mouseenter\", this.showTooltip, isCaptureMode);\n        if (effect === \"float\") {\n          target.addEventListener(\n            \"mousemove\",\n            this.updateTooltip,\n            isCaptureMode\n          );\n        }\n        target.addEventListener(\"mouseleave\", this.hideTooltip, isCaptureMode);\n      });\n    }\n\n    // Global event to hide tooltip\n    if (globalEventOff) {\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n      window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n    }\n\n    // Track removal of targetArray elements from DOM\n    this.bindRemovalTracker();\n  }\n\n  /**\n   * Unbind listeners on target elements\n   */\n  unbindListener() {\n    const { id, globalEventOff } = this.props;\n    if (this.isBodyMode()) {\n      this.unbindBodyListener();\n    } else {\n      const targetArray = this.getTargetArray(id);\n      targetArray.forEach(target => {\n        this.unbindBasicListener(target);\n        if (this.isCustomEvent(target)) this.customUnbindListener(target);\n      });\n    }\n\n    if (globalEventOff)\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n    this.unbindRemovalTracker();\n  }\n\n  /**\n   * Invoke this before bind listener and unmount the component\n   * it is necessary to invoke this even when binding custom event\n   * so that the tooltip can switch between custom and default listener\n   */\n  unbindBasicListener(target) {\n    const isCaptureMode = this.isCapture(target);\n    target.removeEventListener(\"mouseenter\", this.showTooltip, isCaptureMode);\n    target.removeEventListener(\"mousemove\", this.updateTooltip, isCaptureMode);\n    target.removeEventListener(\"mouseleave\", this.hideTooltip, isCaptureMode);\n  }\n\n  getTooltipContent() {\n    const { getContent, children } = this.props;\n\n    // Generate tooltip content\n    let content;\n    if (getContent) {\n      if (Array.isArray(getContent)) {\n        content = getContent[0] && getContent[0](this.state.originTooltip);\n      } else {\n        content = getContent(this.state.originTooltip);\n      }\n    }\n\n    return getTipContent(\n      this.state.originTooltip,\n      children,\n      content,\n      this.state.isMultiline\n    );\n  }\n\n  isEmptyTip(placeholder) {\n    return (\n      (typeof placeholder === \"string\" && placeholder === \"\") ||\n      placeholder === null\n    );\n  }\n\n  /**\n   * When mouse enter, show the tooltip\n   */\n  showTooltip(e, isGlobalCall) {\n    if (isGlobalCall) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement) return;\n    }\n    // Get the tooltip content\n    // calculate in this phrase so that tip width height can be detected\n    const { multiline, getContent } = this.props;\n    const originTooltip = e.currentTarget.getAttribute(\"data-tip\");\n    const isMultiline =\n      e.currentTarget.getAttribute(\"data-multiline\") || multiline || false;\n\n    // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n    const switchToSolid = e instanceof window.FocusEvent || isGlobalCall;\n\n    // if it needs to skip adding hide listener to scroll\n    let scrollHide = true;\n    if (e.currentTarget.getAttribute(\"data-scroll-hide\")) {\n      scrollHide = e.currentTarget.getAttribute(\"data-scroll-hide\") === \"true\";\n    } else if (this.props.scrollHide != null) {\n      scrollHide = this.props.scrollHide;\n    }\n\n    // Make sure the correct place is set\n    const desiredPlace =\n      e.currentTarget.getAttribute(\"data-place\") || this.props.place || \"top\";\n    const effect =\n      (switchToSolid && \"solid\") || this.getEffect(e.currentTarget);\n    const offset =\n      e.currentTarget.getAttribute(\"data-offset\") || this.props.offset || {};\n    const result = getPosition(\n      e,\n      e.currentTarget,\n      this.tooltipRef,\n      desiredPlace,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        e,\n        e.currentTarget,\n        this.tooltipRef,\n        desiredPlace,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    const place = result.isNewState ? result.newState.place : desiredPlace;\n\n    // To prevent previously created timers from triggering\n    this.clearTimer();\n\n    const target = e.currentTarget;\n\n    const reshowDelay = this.state.show ? (target.getAttribute(\"data-delay-update\") || this.props.delayUpdate) : 0;\n\n    const self = this;\n\n    const updateState = function updateState() {\n      self.setState({\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute(\"data-type\") ||\n            self.props.type ||\n            \"dark\",\n          customColors: {\n            text: target.getAttribute(\"data-text-color\") ||\n              self.props.textColor ||\n              null,\n            background: target.getAttribute(\"data-background-color\") ||\n              self.props.backgroundColor ||\n              null,\n            border: target.getAttribute(\"data-border-color\") ||\n              self.props.borderColor ||\n              null,\n            arrow: target.getAttribute(\"data-arrow-color\") ||\n              self.props.arrowColor ||\n              null\n          },\n          effect: effect,\n          offset: offset,\n          html: (target.getAttribute(\"data-html\") ? target.getAttribute(\"data-html\") === \"true\" : self.props.html) ||\n            false,\n          delayShow: target.getAttribute(\"data-delay-show\") ||\n            self.props.delayShow ||\n            0,\n          delayHide: target.getAttribute(\"data-delay-hide\") ||\n            self.props.delayHide ||\n            0,\n          delayUpdate: target.getAttribute(\"data-delay-update\") ||\n            self.props.delayUpdate ||\n            0,\n          border: (target.getAttribute(\"data-border\") ?\n            target.getAttribute(\"data-border\") === \"true\" :\n            self.props.border) ||\n            false,\n          extraClass: target.getAttribute(\"data-class\") ||\n            self.props.class ||\n            self.props.className ||\n            \"\",\n          disable: (target.getAttribute(\"data-tip-disable\") ?\n            target.getAttribute(\"data-tip-disable\") === \"true\" :\n            self.props.disable) ||\n            false,\n          currentTarget: target\n        }, () => {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(() => {\n              if (self.mount) {\n                const { getContent } = self.props;\n                const placeholder = getTipContent(originTooltip, \"\", getContent[0](), isMultiline);\n                const isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({ isEmptyTip });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        }\n      );\n    };\n\n    // If there is no delay call immediately, don't allow events to get in first.\n    if (reshowDelay) {\n      this.delayReshow = setTimeout(updateState, reshowDelay);\n    } else {\n      updateState();\n    }\n  }\n\n  /**\n   * When mouse hover, update tool tip\n   */\n  updateTooltip(e) {\n    const { delayShow, disable } = this.state;\n    const { afterShow } = this.props;\n    const placeholder = this.getTooltipContent();\n    const delayTime = parseInt(delayShow, 10);\n    const eventTarget = e.currentTarget || e.target;\n\n    // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n    if (this.mouseOnToolTip()) {\n      return;\n    }\n\n    // if the tooltip is empty, disable the tooltip\n    if (this.isEmptyTip(placeholder) || disable) {\n      return;\n    }\n\n    const updateState = () => {\n      if ((Array.isArray(placeholder) && placeholder.length > 0) || placeholder) {\n        const isInvisible = !this.state.show;\n        this.setState({\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          }, () => {\n            this.updatePosition();\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          }\n        );\n      }\n    };\n\n    clearTimeout(this.delayShowLoop);\n    if (delayShow) {\n      this.delayShowLoop = setTimeout(updateState, delayTime);\n    } else {\n      updateState();\n    }\n  }\n\n  /*\n   * If we're mousing over the tooltip remove it when we leave.\n   */\n  listenForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.addEventListener(\"mouseleave\", this.hideTooltip);\n    }\n  }\n\n  removeListenerForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.removeEventListener(\"mouseleave\", this.hideTooltip);\n    }\n  }\n\n  /**\n   * When mouse leave, hide tooltip\n   */\n  hideTooltip(e, hasTarget, options = { isScroll: false }) {\n    const { disable } = this.state;\n    const { isScroll } = options;\n    const delayHide = isScroll ? 0 : this.state.delayHide;\n    const { afterHide } = this.props;\n    const placeholder = this.getTooltipContent();\n    if (!this.mount) return;\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    if (hasTarget) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement || !this.state.show) return;\n    }\n\n    const resetState = () => {\n      const isVisible = this.state.show;\n      // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n      if (this.mouseOnToolTip()) {\n        this.listenForTooltipExit();\n        return;\n      }\n\n      this.removeListenerForTooltipExit();\n\n      this.setState({ show: false }, () => {\n        this.removeScrollListener(this.state.currentTarget);\n        if (isVisible && afterHide) {\n          afterHide(e);\n        }\n      });\n    };\n\n    this.clearTimer();\n    if (delayHide) {\n      this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n    } else {\n      resetState();\n    }\n  }\n\n  /**\n   * When scroll, hide tooltip\n   */\n  hideTooltipOnScroll(event, hasTarget) {\n    this.hideTooltip(event, hasTarget, { isScroll: true });\n  }\n\n  /**\n   * Add scroll event listener when tooltip show\n   * automatically hide the tooltip when scrolling\n   */\n  addScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.addEventListener(\"scroll\", this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  removeScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.removeEventListener(\"scroll\", this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  // Calculation the position\n  updatePosition() {\n    const {\n      currentEvent,\n      currentTarget,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    } = this.state;\n    const node = this.tooltipRef;\n    const result = getPosition(\n      currentEvent,\n      currentTarget,\n      node,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        currentEvent,\n        currentTarget,\n        node,\n        place,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    if (result.isNewState) {\n      // Switch to reverse placement\n      return this.setState(result.newState, () => {\n        this.updatePosition();\n      });\n    }\n\n    // Set tooltip position\n    node.style.left = result.position.left + \"px\";\n    node.style.top = result.position.top + \"px\";\n  }\n\n  /**\n   * CLear all kinds of timeout of interval\n   */\n  clearTimer() {\n    clearTimeout(this.delayShowLoop);\n    clearTimeout(this.delayHideLoop);\n    clearTimeout(this.delayReshow);\n    clearInterval(this.intervalUpdateContent);\n  }\n\n  hasCustomColors() {\n    return Boolean(\n      Object.keys(this.state.customColors).find(color => color !== \"border\" && this.state.customColors[color]) ||\n      (this.state.border && this.state.customColors[\"border\"])\n    );\n  }\n\n  render() {\n    const { extraClass, html, ariaProps, disable } = this.state;\n    const content = this.getTooltipContent();\n    const isEmptyTip = this.isEmptyTip(content);\n    const style = generateTooltipStyle(this.state.uuid, this.state.customColors, this.state.type, this.state.border);\n\n    const tooltipClass =\n      \"__react_component_tooltip\" +\n      ` ${this.state.uuid}` +\n      (this.state.show && !disable && !isEmptyTip ? \" show\" : \"\") +\n      (this.state.border ? \" border\" : \"\") +\n      ` place-${this.state.place}` + // top, bottom, left, right\n      ` type-${(this.hasCustomColors() ? \"custom\" : this.state.type)}` + // dark, success, warning, error, info, light, custom\n      (this.props.delayUpdate ? \" allow_hover\" : \"\") +\n      (this.props.clickable ? \" allow_click\" : \"\");\n\n    let Wrapper = this.props.wrapper;\n\n    if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n      Wrapper = ReactTooltip.defaultProps.wrapper;\n    }\n\n    const wrapperClassName = [tooltipClass, extraClass].filter(Boolean).join(\" \");\n\n    if (html) {\n      const htmlContent = `${content}\\n<style>${style}</style>`;\n\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id}\n          ref={ref => (this.tooltipRef = ref)}\n          {...ariaProps}\n          data-id=\"tooltip\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      );\n    } else {\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id}\n          {...ariaProps}\n          ref={ref => (this.tooltipRef = ref)}\n          data-id=\"tooltip\"\n        >\n          <style dangerouslySetInnerHTML={{ __html: style }} />\n          {content}\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default ReactTooltip;\n","/**\n * Events that should be bound to the window\n */\nimport CONSTANT from \"../constant\";\n\nexport default function(target) {\n  target.prototype.bindWindowEvents = function(resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false);\n\n    // ReactTooltip.rebuild\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false);\n\n    // ReactTooltip.show\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false);\n\n    // Resize\n    if (resizeHide) {\n      window.removeEventListener(\"resize\", this.onWindowResize);\n      window.addEventListener(\"resize\", this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function() {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener(\"resize\", this.onWindowResize);\n  };\n\n  /**\n   * invoked by resize event of window\n   */\n  target.prototype.onWindowResize = function() {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n","/**\n * Util method to judge if it should follow capture model\n */\n\nexport default function(target) {\n  target.prototype.isCapture = function(currentTarget) {\n    return (\n      (currentTarget &&\n        currentTarget.getAttribute(\"data-iscapture\") === \"true\") ||\n      this.props.isCapture ||\n      false\n    );\n  };\n}\n","/**\n * Util method to get effect\n */\n\nexport default function(target) {\n  target.prototype.getEffect = function(currentTarget) {\n    const dataEffect = currentTarget.getAttribute(\"data-effect\");\n    return dataEffect || this.props.effect || \"float\";\n  };\n}\n","import { v4 as uuid } from \"uuid\";\n\nexport function generateUUID(){\n    return \"t\" + uuid();\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}