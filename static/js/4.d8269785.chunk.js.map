{"version":3,"sources":["utils/ErrorBoundary.js","components/DisplayAddress/DisplayAddressHeader/MeasureMethod.js","components/Favorites/LottieAnimation.js","components/Favorites/Card.js","components/Favorites/PrevAndNext.js","components/Favorites/index.js","pages/Favorites.js"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","reset","to","children","React","Component","connect","setMeasurement","measurement","dataFor","measure1","measure2","className","data-tip","data-for","onClick","e","stopPropagation","prevMesure","toUpperCase","effect","place","type","id","display","useState","animation","setAnimation","useEffect","rain","sun","sun_snow","sun_cloud","LottieLoader","classes","animationJson","address","history","weather","setWeather","redirect","setRedirect","dispatch","useDispatch","helperFunctions","detectWeather","celsius","updateCurrentWeather","key","Math","round","name","pages","setPages","setCurrentPage","notDisplayedCards","width","setNotDisplayedCards","currentPage","prev","disabled","toDisplay","page","noDisplay","length","i","card","pop","unshift","favorites","useContext","ThemeContext","cards","Object","keys","map","index","push","Card","filter","Boolean","PrevAndNext","favorite","useSelector","cachedFavorites","JSON","parse","localStorage","getItem","validObjectWithKeys","getAllFavoritesCurrentWeather","showNotification","data-testid","Favorites"],"mappings":"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","file":"static/js/4.d8269785.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { reset } from \"redux-store/actions\";\nimport { connect } from \"react-redux\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // \"report to service\"\n    console.log(error, errorInfo);\n    // reset all and start over\n    this.props.reset();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return this.props.children;\n  }\n}\n\nconst mapStateToProps = ({}) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, { reset })(ErrorBoundary);\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport default ({ setMeasurement, measurement, dataFor }) => {\n  const handleChange = (e) => {\n    e.stopPropagation(); //prevent redirect on click\n\n    setMeasurement((prevMesure) => {\n      if (prevMesure === \"f\") return \"c\";\n      return \"f\";\n    });\n  };\n  const [measure1, measure2] =\n    measurement === \"c\" ? [\"celsius\", \"fahrenheit\"] : [\"fahrenheit\", \"celsius\"];\n  return (\n    <div\n      className=\"deg-measure pointer noselect\"\n      data-tip={`Change temperature display from ${measure1} to ${measure2}`}\n      data-for={`${dataFor}_measure`}\n      onClick={handleChange}\n    >\n      <span>°{measurement.toUpperCase()}</span>\n      <span className=\"other-deg-option\">°{measure2.toUpperCase()[0]}</span>\n      <ReactTooltip\n        className=\"tooltip\"\n        effect=\"solid\"\n        place={dataFor ? \"bottom\" : \"\"}\n        type={dataFor ? \"\" : \"light\"}\n        id={`${dataFor}_measure`}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n//animations\nimport rain from \"assets/animations/rain.json\";\nimport sun_cloud from \"assets/animations/sun_cloud.json\";\nimport sun_snow from \"assets/animations/sun_snow.json\";\nimport sun from \"assets/animations/sun.json\";\n\nimport LottieLoader from \"utils/LottieLoader\";\n\nexport default ({ display }) => {\n  const [animation, setAnimation] = React.useState(null);\n\n  React.useEffect(() => {\n    setAnimation(\n      display === \"rain\"\n        ? rain\n        : display === \"sun\"\n        ? sun\n        : display === \"snow\"\n        ? sun_snow\n        : sun_cloud\n    );\n  }, []);\n\n  return (\n    animation && (\n      <LottieLoader\n        classes=\"card-weather-animation\"\n        animationJson={animation}\n      />\n    )\n  );\n};\n","import React from \"react\";\nimport { StyledWeatherCard } from \"styles\";\nimport { Redirect } from \"react-router-dom\";\n\n//redux\nimport { updateCurrentWeather } from \"redux-store/actions\";\nimport { useDispatch } from \"react-redux\";\n//helpers\nimport { helperFunctions } from \"helpers/functions\";\n//components\nimport MeasurementToggle from \"components/DisplayAddress/DisplayAddressHeader/MeasureMethod\";\nimport Animation from \"./LottieAnimation\";\n\nexport default ({ address, history }) => {\n  const [weather, setWeather] = React.useState(null);\n  const [redirect, setRedirect] = React.useState(null);\n  const [measurement, setMeasurement] = React.useState(\"f\");\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    setWeather(helperFunctions.detectWeather(address.celsius));\n  }, []);\n\n  if (redirect) {\n    dispatch(updateCurrentWeather(address));\n    return <Redirect to={`/main/${redirect}`} />;\n  }\n\n  return (\n    <StyledWeatherCard\n      className=\"pointer noselect\"\n      onClick={() => setRedirect(address.key)}\n    >\n      <div className=\"card-header\">\n        <MeasurementToggle\n          measurement={measurement}\n          setMeasurement={setMeasurement}\n          dataFor={address.key}\n        />\n        {weather && <Animation display={weather} />}\n      </div>\n      <div className=\"card-footer\">\n        <h3>\n          {Math.round(address[measurement === \"f\" ? \"fahrenheit\" : \"celsius\"])}°\n          {measurement.toUpperCase()}\n        </h3>\n        <span>{address.name}</span>\n      </div>\n    </StyledWeatherCard>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  pages,\n  setPages,\n  setCurrentPage,\n  notDisplayedCards,\n  width,\n  setNotDisplayedCards,\n  currentPage,\n}) => {\n  const loadMore = () => {\n    let toDisplay = 4; // how many pages to load\n    let page = [];\n    const noDisplay = [...notDisplayedCards];\n\n    if (noDisplay.length === 0) {\n      // if all not displayed cards loaded just skip pages and not load more\n      return setCurrentPage((prev) => ++prev);\n    }\n\n    if (width < 375) toDisplay = 1;\n    else if (width >= 375 && width < 768) toDisplay = 2;\n    else if (width >= 768 && width < 1440) toDisplay = 4;\n\n    for (let i = 0; i < toDisplay; i++) {\n      //loading page\n      let card = noDisplay.pop();\n      page.unshift(card);\n      if (noDisplay.length === 0) break;\n    }\n\n    setNotDisplayedCards(noDisplay); // updating not displayed cards array\n    setPages([...pages, [...page]]); // setting the new page\n    setCurrentPage((prev) => ++prev); // updating the current page\n  };\n\n  return (\n    <div className=\"prev-and-next\">\n      <button\n        type=\"button\"\n        onClick={() => setCurrentPage((prev) => --prev)}\n        disabled={currentPage === 0}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        onClick={loadMore}\n        disabled={\n          notDisplayedCards.length === 0 && pages.length < currentPage + 2\n        }\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\n//styled components\nimport { ThemeContext } from \"styled-components\";\n//components\nimport Card from \"./Card\";\nimport PrevAndNext from \"./PrevAndNext\";\n\nexport default ({ favorites }) => {\n  const [notDisplayedCards, setNotDisplayedCards] = React.useState([]);\n  const [pages, setPages] = React.useState([]); // setting paging to display all cards\n  const [currentPage, setCurrentPage] = React.useState(0); // current card display\n\n  const { width } = React.useContext(ThemeContext);\n\n  React.useEffect(() => {\n    setNotDisplayedCards([]);\n\n    let cards = Object.keys(favorites).map((address, index) => {\n      if (\n        (width < 375 && index > 0) || //display on small mobile\n        (width >= 375 && width < 768 && index > 1) || //display on large mobile\n        (width >= 768 && width < 1440 && index > 3) || //display on tablet\n        (width >= 1440 && index > 7) // //display on computer\n      ) {\n        notDisplayedCards.push(\n          <Fragment key={index}>\n            <Card address={favorites[address]} />\n          </Fragment>\n        );\n        setNotDisplayedCards([...notDisplayedCards]);\n\n        return null;\n      }\n\n      return (\n        <Fragment key={index}>\n          <Card address={favorites[address]} />\n        </Fragment>\n      );\n    });\n\n    // remove all null items from array\n    cards = cards.filter(Boolean);\n\n    // create paging\n    setPages([cards]);\n  }, [width, favorites]);\n\n  return (\n    <>\n      <div className=\"weather-card-container\">{pages[currentPage]}</div>\n      {(notDisplayedCards.length || pages.length > 1) && (\n        <PrevAndNext\n          notDisplayedCards={notDisplayedCards}\n          setNotDisplayedCards={setNotDisplayedCards}\n          pages={pages}\n          setPages={setPages}\n          setCurrentPage={setCurrentPage}\n          width={width}\n          currentPage={currentPage}\n        />\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n//redux\nimport { getAllFavoritesCurrentWeather } from \"redux-store/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n//helper\nimport { helperFunctions } from \"helpers/functions\";\n//utils\nimport ErrorBoundary from \"utils/ErrorBoundary\";\nimport { showNotification } from \"utils/toastNotifications\";\n//components\nimport Favorites from \"components/Favorites\";\n\nexport default () => {\n  const { favorite } = useSelector((state) => state.weather);\n  const dispatch = useDispatch();\n  const cachedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\n  React.useEffect(() => {\n    if (!helperFunctions.validObjectWithKeys(cachedFavorites)) {\n      showNotification(\"You did not choose any favorite addresses\");\n    } else {\n      dispatch(getAllFavoritesCurrentWeather(cachedFavorites, favorite));\n    }\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <div data-testid=\"favorite-page\" className=\"favorites-container\">\n        <Favorites favorites={favorite} />\n      </div>\n    </ErrorBoundary>\n  );\n};\n"],"sourceRoot":""}