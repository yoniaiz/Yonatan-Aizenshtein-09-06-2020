{"version":3,"sources":["utils/ErrorBoundary.js","components/DisplayAddress/DisplayAddressHeader/MeasureMethod.js","assets/images/heartIcon.png","assets/images/hearIconOutline.png","components/SearchAddressInput/SelectField.js","components/SearchAddressInput/index.js","components/DisplayAddress/FiveDayForecast/Headline.js","components/DisplayAddress/FiveDayForecast/Forecast.js","components/DisplayAddress/FiveDayForecast/index.js","components/DisplayAddress/DisplayAddressHeader/AddToFavorites.js","components/DisplayAddress/DisplayAddressHeader/index.js","components/DisplayAddress/index.js","pages/Main.js"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","reset","to","children","React","Component","connect","setMeasurement","measurement","dataFor","measure1","measure2","className","data-tip","data-for","onClick","e","stopPropagation","prevMesure","toUpperCase","effect","place","type","id","module","exports","selectedAddress","setSelectedAddress","setInputVal","inputVal","options","customStyles","menu","styles","minWidth","maxWidth","width","color","marginLeft","fontSize","backgroundColor","zIndex","singleValue","option","isSelected","isFocused","control","borderRadius","padding","margin","whiteSpace","overflow","textOverflow","indicatorsContainer","dropdownIndicator","data-testid","inputId","inputValue","loadingMessage","placeholder","value","length","helperFunctions","validObjectWithKeys","filter","address","onChange","selected","onInputChange","val","test","useState","setOptions","dispatch","useDispatch","autocomplete","useSelector","weather","useEffect","placesAutocomplete","selectOptions","map","label","country","name","city","key","SelectField","headline","forecast","date","maxTemp","minTemp","day","night","getDayOfTheWeek","Math","round","toLowerCase","dailyForecast","Headline","index","Forecast","like","setLike","currentWeather","favoriteAddresses","JSON","parse","localStorage","getItem","isFavorite","parseInt","saveCurrentWeather","showNotification","setItem","stringify","src","heart","hearIconOutline","celsius","fahrenheit","MeasureMethod","AddToFavorites","Object","keys","DisplayAddressHeader","FiveDayForecast","params","match","history","useHistory","currentLocation","favorite","getFiveDayForecast","push","SearchAddressInput","DisplayAddress"],"mappings":"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","file":"static/js/5.d9cb718c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { reset } from \"redux-store/actions\";\nimport { connect } from \"react-redux\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // \"report to service\"\n    console.log(error, errorInfo);\n    // reset all and start over\n    this.props.reset();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return this.props.children;\n  }\n}\n\nconst mapStateToProps = ({}) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, { reset })(ErrorBoundary);\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport default ({ setMeasurement, measurement, dataFor }) => {\n  const handleChange = (e) => {\n    e.stopPropagation(); //prevent redirect on click\n\n    setMeasurement((prevMesure) => {\n      if (prevMesure === \"f\") return \"c\";\n      return \"f\";\n    });\n  };\n  const [measure1, measure2] =\n    measurement === \"c\" ? [\"celsius\", \"fahrenheit\"] : [\"fahrenheit\", \"celsius\"];\n  return (\n    <div\n      className=\"deg-measure pointer noselect\"\n      data-tip={`Change temperature display from ${measure1} to ${measure2}`}\n      data-for={`${dataFor}_measure`}\n      onClick={handleChange}\n    >\n      <span>°{measurement.toUpperCase()}</span>\n      <span className=\"other-deg-option\">°{measure2.toUpperCase()[0]}</span>\n      <ReactTooltip\n        className=\"tooltip\"\n        effect=\"solid\"\n        place={dataFor ? \"bottom\" : \"\"}\n        type={dataFor ? \"\" : \"light\"}\n        id={`${dataFor}_measure`}\n      />\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/heartIcon.7b36ad43.png\";","module.exports = __webpack_public_path__ + \"static/media/hearIconOutline.5bc2727a.png\";","import React from \"react\";\nimport Select from \"react-select\";\nimport { helperFunctions } from \"helpers/functions\";\n\nexport default ({\n  selectedAddress,\n  setSelectedAddress,\n  setInputVal,\n  inputVal,\n  options,\n}) => {\n  const customStyles = {\n    menu: (styles) => ({\n      ...styles,\n      minWidth: 300,\n      maxWidth: 480,\n      width: \"90%\",\n      color: \"black\",\n      marginLeft: \"0 auto\",\n      fontSize: \"1rem\",\n      backgroundColor: \"rgba(225,225,225,.8)\",\n      zIndex: 1000,\n    }),\n    singleValue: (styles) => ({}),\n    option: (styles, state) => ({\n      ...styles,\n      color: \"black\",\n      backgroundColor:\n        state.isSelected || state.isFocused\n          ? \"rgba(225,225,225,1)\"\n          : \"transparent\",\n    }),\n    control: (styles) => ({\n      // none of react-select's styles are passed to <Control />\n      ...styles,\n      minWidth: 300,\n      maxWidth: 480,\n      width: \"90%\",\n      fontSize: \"1rem\",\n      borderRadius: \"40px\",\n      padding: \"2px 8px\",\n      margin: \"0 auto\",\n      backgroundColor: \"rgba(225,225,225,.8)\",\n      color: \"black\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    }),\n    indicatorsContainer: () => ({}),\n    dropdownIndicator: (styles, state) => ({\n      ...styles,\n      color: \"rgba(0,0,0,0.6)\",\n      \":&hover\": {\n        color: \"rgba(0,0,0,0.8)\",\n      },\n    }),\n  };\n\n  return (\n    <Select\n      options={options}\n      styles={customStyles}\n      data-testid=\"select-input\"\n      inputId=\"select-input\"\n      className=\"select-input\"\n      inputValue={inputVal}\n      loadingMessage=\"loading\"\n      placeholder=\"Select country\"\n      value={\n        options.length > 0 &&\n        helperFunctions.validObjectWithKeys(selectedAddress)\n          ? options.filter((address) => address.value === selectedAddress.value)\n          : null\n      }\n      onChange={(selected) =>\n        setSelectedAddress({ ...selected, selected: true })\n      }\n      onInputChange={(val) => {\n        // english letters only or white space\n        if (/^$|[a-z A-Z]+$/.test(val)) setInputVal(val);\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport Select from \"react-select\";\n\n//redux\nimport { placesAutocomplete, clearAutocomplete } from \"redux-store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SelectField from \"./SelectField\";\n\nexport default ({ selectedAddress, setSelectedAddress }) => {\n  const [inputVal, setInputVal] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n\n  const dispatch = useDispatch();\n  const { autocomplete } = useSelector((state) => state.weather);\n\n  React.useEffect(() => {\n    if (inputVal) {\n      // call autocomplete when input entered\n      dispatch(placesAutocomplete(inputVal));\n    }\n  }, [inputVal]);\n\n  React.useEffect(() => {\n    if (autocomplete && autocomplete.length > 0) {\n      // parse the autocomplete to fit the react-select component\n      const selectOptions = autocomplete.map((address) => ({\n        label:\n          address.country && address.address\n            ? `${address.country} ${address.address}`\n            : address.name,\n        city: address.address || address.name,\n        value: address.key,\n      }));\n\n      setOptions(selectOptions);\n    }\n  }, [autocomplete]);\n\n  return (\n    <div className=\"select-input-container\">\n      <SelectField\n        selectedAddress={selectedAddress}\n        setSelectedAddress={setSelectedAddress}\n        setInputVal={setInputVal}\n        inputVal={inputVal}\n        options={options}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ headline }) => {\n  return (\n    <div className=\"daily-description\">\n      <h3>{headline}</h3>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { helperFunctions } from \"helpers/functions\";\n\nexport default ({\n  forecast: { date, maxTemp, minTemp, day, night },\n  measurement,\n}) => {\n  return (\n    <div data-testid=\"forecast\" className=\"forecast\">\n      <h4>{helperFunctions.getDayOfTheWeek(date)}</h4>\n      <span>\n        {Math.round(\n          (maxTemp[measurement.toLowerCase()] +\n            minTemp[measurement.toLowerCase()]) /\n            2\n        )}\n        °{measurement.toUpperCase()}\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Headline from \"./Headline\";\nimport Forecast from \"./Forecast\";\n\nexport default ({ forecast: { headline, dailyForecast }, measurement }) => {\n  return (\n    <div className=\"forecast-container\">\n      <Headline headline={headline} />\n      <div className=\"five-day-container\">\n        {dailyForecast.map((forecast, index) => (\n          <Forecast forecast={forecast} key={index} measurement={measurement}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n//redux\nimport { useSelector } from \"react-redux\";\n//components\nimport heart from \"assets/images/heartIcon.png\";\nimport hearIconOutline from \"assets/images/hearIconOutline.png\";\n//helpers\nimport { helperFunctions } from \"helpers/functions\";\n//utils\nimport { showNotification } from \"utils/toastNotifications\";\n\nexport default () => {\n  const [like, setLike] = React.useState(false);\n  const { currentWeather } = useSelector((state) => state.weather);\n  let favoriteAddresses = JSON.parse(localStorage.getItem(\"favorites\")) || {};\n\n  React.useEffect(() => {\n    // detect if current weather is in favorites list\n    if (helperFunctions.validObjectWithKeys(favoriteAddresses)) {\n      const isFavorite = favoriteAddresses[parseInt(currentWeather.key)];\n      if (isFavorite) {\n        setLike(true);\n      }else {\n        setLike(false);\n      }\n    }\n  }, [currentWeather]);\n\n  const handleAddToFavorites = () => {\n    if (like) {\n      if (favoriteAddresses[currentWeather.key]) {\n        // delete address from local storage\n        delete favoriteAddresses[currentWeather.key];\n      }\n    } else {\n      // add new address to local storage\n      const saveCurrentWeather = {};\n      saveCurrentWeather[currentWeather.key] = { ...currentWeather };\n\n      favoriteAddresses = { ...favoriteAddresses, ...saveCurrentWeather };\n      showNotification(\n        `You added ${currentWeather.name} to favorite list!`,\n        \"success\"\n      );\n    }\n\n    //update local storage and like icon\n    localStorage.setItem(\"favorites\", JSON.stringify(favoriteAddresses));\n    setLike(!like);\n  };\n\n  return (\n    <div\n      className=\"add-to-favorite-address pointer\"\n      onClick={handleAddToFavorites}\n    >\n      <img\n        src={like ? heart : hearIconOutline}\n        data-tip={like ? \"Remove from favorites\" : \"Add address to favorites\"}\n        data-for=\"heart\"\n      />\n      <ReactTooltip effect=\"solid\" place=\"left\" type=\"light\" id=\"heart\" />\n    </div>\n  );\n};\n","import React from \"react\";\nimport AddToFavorites from \"./AddToFavorites\";\nimport MeasureMethod from \"./MeasureMethod\";\n\nexport default ({\n  currentWeather: { name, celsius, fahrenheit },\n  measurement,\n  setMeasurement,\n}) => {\n  return (\n    <div className=\"weather-box-header\">\n      <div className=\"selected-address\">\n        <div>{name}</div>\n        <div>{measurement === \"f\" ? `${fahrenheit}°F` : `${celsius}°C`}</div>\n      </div>\n      <MeasureMethod\n        measurement={measurement}\n        setMeasurement={setMeasurement}\n      />\n      <AddToFavorites />\n    </div>\n  );\n};\n","import React from \"react\";\n//redux\nimport { useSelector } from \"react-redux\";\n//styled components\nimport { StyledWeatherBox } from \"styles\";\n//components\nimport FiveDayForecast from \"./FiveDayForecast\";\nimport DisplayAddressHeader from \"./DisplayAddressHeader\";\n\nexport default () => {\n  const { forecast, currentWeather } = useSelector((state) => state.weather);\n  const [measurement, setMeasurement] = React.useState(\"f\");\n\n  if (\n    Object.keys(forecast).length === 0 ||\n    Object.keys(currentWeather).length === 0\n  )\n    return null;\n\n  return (\n    <StyledWeatherBox>\n      <DisplayAddressHeader\n        currentWeather={currentWeather}\n        measurement={measurement}\n        setMeasurement={setMeasurement}\n      />\n      <FiveDayForecast forecast={forecast} measurement={measurement} />\n    </StyledWeatherBox>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n//redux\nimport { getFiveDayForecast, clearAutocomplete } from \"redux-store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//helpers\nimport { helperFunctions } from \"helpers/functions\";\n//utils\nimport ErrorBoundary from \"utils/ErrorBoundary\";\n// components\nimport SearchAddressInput from \"components/SearchAddressInput\";\nimport DisplayAddress from \"components/DisplayAddress\";\n\nconst { validObjectWithKeys } = helperFunctions;\n\nexport default ({ match: { params } }) => {\n  const history = useHistory();\n\n  const { currentLocation, favorite, currentWeather } = useSelector(\n    (state) => state.weather\n  );\n  const dispatch = useDispatch();\n\n  const [selectedAddress, setSelectedAddress] = React.useState({});\n\n  React.useEffect(() => {\n    if (validObjectWithKeys(selectedAddress) && selectedAddress.selected) {\n      // when new selected address is selected from autocomplete\n      dispatch(getFiveDayForecast(selectedAddress));\n    }\n    if (\n      currentLocation &&\n      !validObjectWithKeys(selectedAddress) &&\n      !params.id\n    ) {\n      // set currentLocation as selected address\n      setSelectedAddress(currentLocation);\n    }\n\n    if (\n      params.id &&\n      (!validObjectWithKeys(selectedAddress) ||\n        selectedAddress.key !== params.id)\n    ) {\n      // when id passed in params check if valid number\n      if (params.id.match(/^[0-9]+$/) && favorite[params.id]) {\n        setSelectedAddress(currentWeather);\n        dispatch(getFiveDayForecast(currentWeather, false));\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }, [selectedAddress, currentLocation]);\n\n  return (\n    <ErrorBoundary>\n      <div data-testid=\"main-page\">\n        <SearchAddressInput\n          setSelectedAddress={setSelectedAddress}\n          selectedAddress={selectedAddress}\n        />\n        <DisplayAddress />\n      </div>\n    </ErrorBoundary>\n  );\n};\n"],"sourceRoot":""}